[user]
	name = Andi Lau
	email = andi@herrlau.de

[github]
	user = andilau

[core]
	autocrlf = input	# no more crlf
	excludesfile = ~/.gitignore
	ignorecase = false 	# dont ignore case
	whitespace = space-before-tab,-indent-with-non-tab,trailing-space

	# Speed up commands involving untracked files such as `git status`.
	# https://git-scm.com/docs/git-update-index#_untracked_cache
	untrackedCache = true

	editor = nvim
	pager = cat

[log]
	date = local

[push]
	default = simple

[fetch]
	prune = true		# delete local branches if remotes are gone
	pruneTags = true	# delete local tags if remote are gone
	output = compact	# be concise

[pull]
	default = matchng
	rebase = true

[merge]
	tool = vimdiff

[diff]
	algorithm = patience
	renames = copies         # try to spot renaming of files
	indentHeuristic = true	 # experimental to make patches easier to read
	tool = nvimdiff
	guitool = opendiff

[difftool]
	prompt = false

[difftool "nvimdiff"]
	cmd = nvim -d $LOCAL $REMOTE # $MERGED #-c '$wincmd w' -c 'wincmd J'

[filter "media"]
	clean = git-media-clean %f
	smudge = git-media-smudge %f

[color]
	ui = true

[color "diff"]
	meta = yellow
	frag = magenta
	old = red bold
	new = green
	plain = white

[alias]
	d = diff --word-diff
	dc = diff --cached
	ds = diff --staged
	s = status -sb
	cl = clone
	ci = commit
	co = checkout
	fixup = commit --fixup
	amend = commit --amend --no-edit

	a = add
	ai = add --interactive

	remotes = remote -v
	branches = branch -l -v -a
	tags = tag -l

	l = log --pretty=oneline -n 20 --graph --abbrev-commit
	ls = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --reverse
	lsd = log --pretty=format:"%C(yellow)%h\\ %ad%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --reverse --date=short
	lsg = log --pretty=format:"%C(yellow)%h\\ %ad%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --all --graph --date=short
	ll = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --numstat --reverse
	lc = "!f() { git ll "$1"^.."$1"; }; f"
	lf = log -u
	filelog = log -u

	sl = stash list
	sa = stash apply
    ss = stash save

    prev = checkout HEAD^1
    next = "!sh -c 'git log --reverse --pretty=%H master | awk \"/$(git rev-parse HEAD)/{getline;print}\" | xargs git checkout'"

[init]
	defaultBranch = main
